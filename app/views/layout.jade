doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width')
    title= "Graphs"
    block css
      link(rel='stylesheet', href='/css/style.css')
    block js
      script(src='http://d3js.org/d3.v3.min.js')
      if ENV_DEVELOPMENT
        script(src='http://localhost:35729/livereload.js')
  body
    block content
  script(src='http://d3js.org/d3.v3.min.js')
  script.
    var r = 960,
    format = d3.format(",d"),
    fill = d3.scale.category20c();

    var bubble = d3.layout.pack()
        .sort(null)
        .size([r, r])
        .padding(1.5);

    var vis = d3.select("#chart").append("svg")
        .attr("width", r)
        .attr("height", r)
        .attr("class", "bubble");

      d3.json("/2015/1", function(error, root) {
        var node = vis.selectAll("g.node")
          .data(bubble.nodes(classes(root.data))
          .filter(function(d) { return !d.children; }))
        .enter().append("g")
          .attr("class", "node")
          .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

      node.append("title")
          .text(function(d) { return d.className + ": " + format(d.value); });

      node.append("circle")
          .attr("r", function(d) { return d.r; })
          .style("fill", function(d) { return fill(d.packageName); });

      node.append("text")
          .attr("text-anchor", "middle")
          .attr("dy", ".3em")
          .text(function(d) { return d.className.substring(0, d.r / 3) + " : " + d.value; });


      });
      function classes(root) {
        var classes = [];
        root.forEach(function(child){
            classes.push({packageName: child.name, className: child.name, value: child.amount});
        });
        return {children: classes};
      }

